type Author {
    #作者Id
    id: Long!
    #创建时间
    createdTime: String
    #名
    firstName: String
    #姓
    lastName: String
    #该作者的所有书籍
    books: [Book]
}

input BookInput {
    title: String!
    isbn: String!
    pageCount: Int
    authorId: Long
}

type Book {
    id: Long!
    title: String!
    isbn: String!
    pageCount: Int
    author: Author
    price: Float
}

enum CountryEnum {
    CHINA
    USA
}

######## user 相关 ############
type User {
    id: Long!
    name: String!
    age: Int
    email: String!
    pwd:String!
}
input AuthData {
    pwd: String!
    email: String!
}

union CreateUserResult = CreatedUser | ErrorContainer

type CreatedUser {
    user: User!
}
type ErrorContainer {
    messages:[String!]!
}

#### 使用user登录相关 ###
union LoginResult = LoginPayload | ErrorContainer

type LoginPayload {
    token: Long!
    user: User!
}

#### 分页 ####
type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}
type BookEdge {
    cursor: String
    node: Book
}
type BookConnection {
    edges: [BookEdge]
    pageInfo: PageInfo
}
